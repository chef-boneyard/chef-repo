{
  "name": "mysql",
  "description": "Installs and configures mysql for client or server",
  "long_description": "= DESCRIPTION:\n\nInstalls and configures MySQL client or server.\n\n= REQUIREMENTS:\n\n== Platform:\n\nBest tested on Ubuntu 9.04,9.10. On EC2, requires platform that supports -o bind option for the 'mount' command.\n\n== Cookbooks:\n\nRequires Opscode's openssl cookbook for secure password generation.\n\nRequires a C compiler and Ruby development package in order to build mysql gem with native extensions. On Debian and Ubuntu systems this is satisfied by installing the \"build-essential\" and \"ruby-dev\" packages before running Chef. See USAGE below for information on how to handle this during a Chef run.\n\n= RESOURCES AND PROVIDERS\n\nThe cookbook contains a LWRP, +mysql_database+ which can be used to manage databases through calls to the MySQL API. The mysql gem is installed to make this usable. The provider currently supports three actions:\n\n* +flush_tables_with_read_lock+ - sends the sql command \"flush tables with read lock\", used for setting up mysql master/slave replication.\n* +unflush_tables+ - sends the sql command \"unflush tables\", used for setting up master/slave replication.\n* +create_db+ - specify a database to be created.\n\nFor example see the USAGE section below.\n\n= ATTRIBUTES:\n\n* +mysql[:server_root_password]+ - Set the server's root password with this, default is a randomly generated password with +OpenSSL::Random.random_bytes+.\n* +mysql[:server_repl_password]+ - Set the replication user 'repl' password with this, default is a randomly generated password with +OpenSSL::Random.random_bytes+.\n* +mysql[:server_debian_password]+ - Set the debian-sys-maint user password with this, default is a randomly generated password with +OpenSSL::Random.random_bytes+.\n* +mysql[:bind_address]+ - Listen address for MySQLd, default is node's ipaddress.\n* +mysql[:datadir]+ - Location for mysql data directory, default is \"/var/lib/mysql\"\n* +mysql[:ec2_path]+ - location of mysql datadir on EC2 nodes, default \"/mnt/mysql\"\n\nPerformance tuning attributes, each corresponds to the same-named parameter in my.cnf; default values listed\n\n* +mysql[:tunable][:key_buffer]+          = \"250M\"\n* +mysql[:tunable][:max_connections]+     = \"800\"\n* +mysql[:tunable][:wait_timeout]+        = \"180\"\n* +mysql[:tunable][:net_write_timeout]+   = \"30\"\n* +mysql[:tunable][:net_write_timeout]+   = \"30\"\n* +mysql[:tunable][:back_log]+            = \"128\"\n* +mysql[:tunable][:table_cache]+         = \"128\"\n* +mysql[:tunable][:max_heap_table_size]+ = \"32M\"\n\n= USAGE:\n\nOn client nodes,\n\n  include_recipe \"mysql::client\"\n\nThis will install the MySQL client libraries and development headers on the system. It will also install the Ruby Gem +mysql+, so that the cookbook's LWRP (above) can be used. This is done during the compile-phase of the Chef run.\n\n  r = package ... do\n    action :nothing\n  end\n\n  r.run_action(:install)\n\nThis creates a resource object for the package and does the installation before other recipes are parsed. You'll need to have the C compiler and such (ie, build-essential on Ubuntu) before running the recipes, but we already do that when installing Chef :-). If you want to be able to access a MySQL database via Ruby within another recipe, you could do so, like so:\n\n  Gem.clear_paths # needed for Chef to find the gem...\n  require 'mysql' # requires the mysql gem\n\n  mysql_database \"create application_production database\" do\n    host \"localhost\"\n    username \"root\"\n    password node[:mysql][:server_root_password]\n    database \"application_production\"\n    action :create_db\n  end\n\nThis will connect to the MySQL server running on localhost as \"root\" and password as +mysql[:server_root_password]+ attribute (see below) and create the database specified with the +database+ parameter. The provider will attempt to determine whether the database exists first.\n\nOn server nodes,\n\n  include_recipe \"mysql::server\"\n\nOn Debian and Ubuntu, this will preseed the mysql-server package with the randomly generated root password from the attributes file. On other platforms, it simply installs the required packages. It will also create an SQL file, /etc/mysql/grants.sql, that will be used to set up grants for the root, repl and debian-sys-maint users.\n\nOn EC2 nodes,\n\n  include_recipe \"mysql::server_ec2\"\n\nWhen the ec2_path doesn't exist we look for a mounted filesystem (eg, EBS) and move the datadir there.\n\nThe client recipe is already included by server and 'default' recipes.\n\nTo make sure that a C compiler and the Ruby development libraries are installed, use the following run list in the node or in a role:\n\n  {\n    \"run_list\": [\n      \"recipe[build-essential]\",\n      \"recipe[ruby]\",\n      \"recipe[mysql::server]\"\n    ]\n  }\n\nThe build-essential and ruby cookbooks install the packages in question during the \"execution\" phase of the Chef client run, rather than the compile phase when the MySQL gem is installed. To work around this for now until the build-essential and ruby packages are updated, modify your local copies of the recipes:\n\nIn the Opscode build-essential default recipe:\n\n %w{build-essential binutils-doc}.each do |pkg|\n   p = package pkg do\n     action :nothing\n   end\n   p.run_action(:install)\n end\n\nAnd the ruby recipe to have the following:\n\n  extra_packages.each do |pkg|\n   p = package pkg do\n     action :nothing\n   end\n   p.run_action(:install)\n  end\n\nThese cookbooks aren't strict dependencies, and not if the installation process already included installing build-essential and ruby1.8-dev (e.g. RubyGems installation).\n\nFor more infromation on the compile vs execution phase of a Chef run:\n\n  http://wiki.opscode.com/display/chef/Anatomy+of+a+Chef+Run\n\n= LICENSE and AUTHOR:\n\nAuthor:: Joshua Timberman (<joshua@opscode.com>)\nAuthor:: AJ Christensen (<aj@opscode.com>)\n\nCopyright:: 2009, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "maintainer": "Opscode, Inc.",
  "maintainer_email": "cookbooks@opscode.com",
  "license": "Apache 2.0",
  "platforms": {
    "debian": [

    ],
    "ubuntu": [

    ],
    "centos": [

    ],
    "suse": [

    ],
    "fedora": [

    ],
    "redhat": [

    ]
  },
  "dependencies": {
    "openssl": [

    ]
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
    "mysql/server_root_password": {
      "display_name": "MySQL Server Root Password",
      "description": "Randomly generated password for the mysqld root user",
      "default": "randomly generated",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/bind_address": {
      "display_name": "MySQL Bind Address",
      "description": "Address that mysqld should listen on",
      "default": "ipaddress",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/datadir": {
      "display_name": "MySQL Data Directory",
      "description": "Location of mysql databases",
      "default": "/var/lib/mysql",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/ec2_path": {
      "display_name": "MySQL EC2 Path",
      "description": "Location of mysql directory on EC2 instance EBS volumes",
      "default": "/mnt/mysql",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/tunable": {
      "display_name": "MySQL Tunables",
      "description": "Hash of MySQL tunable attributes",
      "type": "hash",
      "choice": [

      ],
      "calculated": false,
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/tunable/key_buffer": {
      "display_name": "MySQL Tuntable Key Buffer",
      "default": "250M",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/tunable/max_connections": {
      "display_name": "MySQL Tunable Max Connections",
      "default": "800",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/tunable/wait_timeout": {
      "display_name": "MySQL Tunable Wait Timeout",
      "default": "180",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/tunable/net_read_timeout": {
      "display_name": "MySQL Tunable Net Read Timeout",
      "default": "30",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/tunable/net_write_timeout": {
      "display_name": "MySQL Tunable Net Write Timeout",
      "default": "30",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/tunable/back_log": {
      "display_name": "MySQL Tunable Back Log",
      "default": "128",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/tunable/table_cache": {
      "display_name": "MySQL Tunable Table Cache for MySQL < 5.1.3",
      "default": "128",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/tunable/table_open_cache": {
      "display_name": "MySQL Tunable Table Cache for MySQL >= 5.1.3",
      "default": "128",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "mysql/tunable/max_heap_table_size": {
      "display_name": "MySQL Tunable Max Heap Table Size",
      "default": "32M",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    }
  },
  "groupings": {
  },
  "recipes": {
    "mysql": "Includes the client recipe to configure a client",
    "mysql::client": "Installs packages required for mysql clients using run_action magic",
    "mysql::server": "Installs packages required for mysql servers w/o manual intervention",
    "mysql::server_ec2": "Performs EC2-specific mountpoint manipulation"
  },
  "version": "0.24.4"
}