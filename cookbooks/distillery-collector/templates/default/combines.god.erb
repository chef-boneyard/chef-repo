# Generated by Chef
# Adapted from the example mongrel config that comes with this cookbook.

combine_list = Array.new
Dir["/etc/sv/combine-*"].each do |file|
  file =~ /combine-(\d+)/
  port = $1
  combine = Hash.new
  combine[:name] = "combine-#{port}"
  combine[:start] = "sudo sv start #{combine[:name]}"
  combine[:stop] = "sudo sv stop #{file}"
  combine[:restart] = "sudo sv restart #{file}"
  combine[:pidfile] = File.join(file, "supervise", "pid")
  combine[:port] = port
  combine_list << combine
end

combine_list.each do |combine|
  God.watch do |w|
    w.name = combine[:name]
    w.interval = 30.seconds # default      
    w.start = combine[:start] 
    w.stop = combine[:stop]
    w.restart = combine[:restart]
    #w.start_grace = 10.seconds
    #w.restart_grace = 10.seconds
    w.pid_file = combine[:pidfile] 
    w.group = 'combines'

    # determine the state on startup
    w.transition(:init, { true => :up, false => :start }) do |on|
      on.condition(:process_running) do |c|
        c.running = true
      end
    end

    # determine when process has finished starting
    w.transition([:start, :restart], :up) do |on|
      on.condition(:process_running) do |c|
        c.running = true
      end

      # failsafe
      on.condition(:tries) do |c|
        c.times = 5
        c.transition = :start
      end
    end

    # start if process is not running
    w.transition(:up, :start) do |on|
      on.condition(:process_exits)
    end

    # restart if memory or cpu is too high
    w.transition(:up, :restart) do |on|
      on.condition(:memory_usage) do |c|
        c.interval = 20
        c.above = <%= @max_memory %>.megabytes
        c.times = [3, 5]
      end

      on.condition(:cpu_usage) do |c|
        c.interval = 10
        c.above = <%= @cpu %>.percent
        c.times = [3, 5]
      end
    end

    # lifecycle
    w.lifecycle do |on|
      on.condition(:flapping) do |c|
        c.to_state = [:start, :restart]
        c.times = 5
        c.within = 5.minute
        c.transition = :unmonitored
        c.retry_in = 10.minutes
        c.retry_times = 5
        c.retry_within = 2.hours
      end
    end
  end
end
